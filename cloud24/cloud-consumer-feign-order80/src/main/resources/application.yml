server:
  port: 80

spring:
  application:
    name: cloud-consumer-fegin-order
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: ${spring.application.name}
        prefer-ip-address: true #优先使用服务ip进行注册
    openfeign:
      client:
        config:
          default:
            #连接超时时间
            connectionTimeout: 20000
            #读取超时时间
            readTimeout: 20000
      httpclient:
        hc5:
          enabled: true
      compression:
        request:
          enabled: true
          min-request-size: 2048 #最小触发压缩的大小
          mime-types: text/xml,application/xml,application/json #触发压缩数据类型
        response:
          enabled: true
          #开启断路器和分组激活spring.cloud.openfeign.circuitbreaker.enabled
      circuitbreaker:
        enabled: true
        group:
          enabled: false #没开分组永远不用开分组配置。精确优先，分组次之，默认最后
logging:
  level:
    com:
      atguigu:
        cloud:
          apis:
            PayFeignApi: debug

#resilience4j:
  #舱壁 信号量
#  bulkhead:
#    configs:
#      default:
#        maxConcurrentCalls: 2
#        maxWaitDuration:  1s
#    instances:
#      cloud-payment-service:
#        baseConfig: default

  #舱壁 固定线程池
#  thread-pool-bulkhead:
#    configs:
#      default:
#        core-thread-pool-size: 1
#        max-thread-pool-size: 1
#        queue-capacity: 1
#    instances:
#      cloud-payment-service:
#        base-config: default

  #限流器
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2
#        limit-refresh-period: 1s
#        timeout-duration: 1
#    instances:
#      cloud-payment-service:
#        base-config: default

#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 20s #默认限制远程1s，超过1s就超时异常，配置了降级，就走降级逻辑
  #断路器
#  circuitbreaker:
#    configs:
#      default:
#        #COUNT_BASED
##        failureRateThreshold: 50 #设置50%的调用失败时打开断路器，超过失败请求百分比CirCuitBreaker变为OPEN状态
##        slidingWindowType: COUNT_BASED #滑动窗口的类型
##        slidingWindowSize: 6 #滑动窗口的大小配置COUNT_BASED表示6个请求，配置TIME_BASED表示6秒
##        minimumNumberOfCalls: 6 #断路器计算失败率或慢调用率之前所需的最小样本（每个滑动周期）。默认为10，
##        automaticTransitionFromOpenToHalfOpenEnabled: true #是否启用自动从开启状态过渡到半开状态，默认值为true，如果启用，circuitbreaker
##        waitDurationInOpenState: 5s #从OPEN到HALE_OPEN状态需要等待的时间
##        permittedNumberOfCallsInHalfOpenState: 2 #半开状态允许的最大请求数，默认为10
#
#        #TIME_BASED
##        failureRateThreshold: 50 #设置50%的调用失败时打开断路器，超过失败请求百分⽐CircuitBreaker变为OPEN状态。
##        slowCallDurationThreshold: 2s #慢调用时间阈值，高于这个阈值的视为慢调用并增加慢调用比例。
##        slowCallRateThreshold: 30 #慢调用百分比峰值，断路器把调用时间⼤于slowCallDurationThreshold，视为慢调用，当慢调用比例高于阈值，断路器打开，并开启服务降级
##        slidingWindowType: TIME_BASED # 滑动窗口的类型
##        slidingWindowSize: 2 #滑动窗口的大小配置，配置TIME_BASED表示2秒
##        minimumNumberOfCalls: 2 #断路器计算失败率或慢调用率之前所需的最小样本(每个滑动窗口周期)。
##        permittedNumberOfCallsInHalfOpenState: 2 #半开状态允许的最大请求数，默认值为10。
##        waitDurationInOpenState: 5s #从OPEN到HALF_OPEN状态需要等待的时间
#
#        recordExceptions:
#          - java.lang.Exception
#    instances:
#      cloud-payment-service:
#        baseConfig: default #使用默认配置

    #zipkin
management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0 #值越大手机越及时